!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ant_uz/dotfiles/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/5dc6ad1b/
<C-n>	nvim/init.vim	/^nnoremap <C-n> :NvimTreeToggle<CR>$/;"	m
<CR>	nvim/init.vim	/^ inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm() : "\\<CR>"$/;"	m
<leader>T	nvim/init.vim	/^nmap <leader>T :enew<cr> $/;"	m
<leader>bl	nvim/init.vim	/^nmap <leader>bl :ls<CR>$/;"	m
<leader>bq	nvim/init.vim	/^nmap <leader>bq :bp <BAR> bd #<CR>$/;"	m
<leader>f	nvim/init.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	nvim/init.vim	/^xmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>fb	nvim/init.vim	/^nnoremap <leader>fb <cmd>lua require('telescope.builtin').buffers()<cr>$/;"	m
<leader>ff	nvim/init.vim	/^nnoremap <leader>ff <cmd>lua require('telescope.builtin').find_files()<cr>$/;"	m
<leader>fg	nvim/init.vim	/^nnoremap <leader>fg <cmd>lua require('telescope.builtin').live_grep()<cr>$/;"	m
<leader>fh	nvim/init.vim	/^nnoremap <leader>fh <cmd>lua require('telescope.builtin').current_buffer_tags()<cr>$/;"	m
<leader>g	nvim/init.vim	/^nmap <leader>g :Glow<cr>$/;"	m
<leader>h	nvim/init.vim	/^nmap <leader>h :bprevious<CR>$/;"	m
<leader>l	nvim/init.vim	/^nmap <leader>l :bnext<CR>$/;"	m
<leader>n	nvim/init.vim	/^nnoremap <leader>n :NvimTreeFindFile<CR>$/;"	m
<leader>r	nvim/init.vim	/^nnoremap <leader>r :NvimTreeRefresh<CR>$/;"	m
<leader>rn	nvim/init.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
Dotfiles	README.md	/^# Dotfiles$/;"	c
g:coc_global_extensions	nvim/init.vim	/^let g:coc_global_extensions = [$/;"	v
g:gruvbox_italic	nvim/init.vim	/^let g:gruvbox_italic=1$/;"	v
g:indentLine_setConceal	nvim/init.vim	/^let g:indentLine_setConceal=0 " Use nvim conceal$/;"	v
g:nvim_tree_add_trailing	nvim/init.vim	/^let g:nvim_tree_add_trailing = 1 "Append a trailing slash to folder names$/;"	v
g:nvim_tree_create_in_closed_folder	nvim/init.vim	/^let g:nvim_tree_create_in_closed_folder = 1 "When creating files, sets the path of a file when c/;"	v
g:nvim_tree_disable_window_picker	nvim/init.vim	/^let g:nvim_tree_disable_window_picker = 1 "0 by default, will disable the window picker.$/;"	v
g:nvim_tree_git_hl	nvim/init.vim	/^let g:nvim_tree_git_hl = 1 "Enable file highlight for git attributes.$/;"	v
g:nvim_tree_group_empty	nvim/init.vim	/^let g:nvim_tree_group_empty = 1 "Compact folders that only contain a single folder into one node/;"	v
g:nvim_tree_highlight_opened_files	nvim/init.vim	/^let g:nvim_tree_highlight_opened_files = 1 "Enable folder and file icon highlight for opened fil/;"	v
g:nvim_tree_icon_padding	nvim/init.vim	/^let g:nvim_tree_icon_padding = ' '$/;"	v
g:nvim_tree_icons	nvim/init.vim	/^let g:nvim_tree_icons = {$/;"	v
g:nvim_tree_indent_markers	nvim/init.vim	/^let g:nvim_tree_indent_markers = 1 "Shows indent markers when folders are open$/;"	v
g:nvim_tree_quit_on_open	nvim/init.vim	/^let g:nvim_tree_quit_on_open = 0 "Close the tree when you open a file$/;"	v
g:nvim_tree_refresh_wait	nvim/init.vim	/^let g:nvim_tree_refresh_wait = 1000 "Control how often the tree can be refreshed, 1000 means the/;"	v
g:nvim_tree_respect_buf_cwd	nvim/init.vim	/^let g:nvim_tree_respect_buf_cwd = 1 "Change cwd of nvim-tree to that of new buffer's when openin/;"	v
g:nvim_tree_root_folder_modifier	nvim/init.vim	/^let g:nvim_tree_root_folder_modifier = ':~'$/;"	v
g:nvim_tree_show_icons	nvim/init.vim	/^let g:nvim_tree_show_icons = {$/;"	v
g:nvim_tree_special_files	nvim/init.vim	/^let g:nvim_tree_special_files = { 'README.md': 1, 'Makefile': 1, 'MAKEFILE': 1 } " List of filen/;"	v
g:nvim_tree_symlink_arrow	nvim/init.vim	/^let g:nvim_tree_symlink_arrow = ' âž› '$/;"	v
g:nvim_tree_window_picker_exclude	nvim/init.vim	/^let g:nvim_tree_window_picker_exclude = {$/;"	v
g:vimtex_compiler_method	nvim/init.vim	/^let g:vimtex_compiler_method = 'latexmk'$/;"	v
g:vimtex_view_general_viewer	nvim/init.vim	/^let g:vimtex_view_general_viewer = 'open -a Preview'$/;"	v
g:vimwiki_list	nvim/init.vim	/^let g:vimwiki_list = [{$/;"	v
gd	nvim/init.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gi	nvim/init.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gr	nvim/init.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gy	nvim/init.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
mapleader	nvim/init.vim	/^let mapleader = "," " Change MapLeader$/;"	v
style bg	tmux.conf	/^set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1$/;"	k
style bg	tmux.conf	/^set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1$/;"	k
style bg	tmux.conf	/^set-option -g pane-active-border-style bg=default,fg=colour214$/;"	k
style bg	tmux.conf	/^set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1$/;"	k
style bg	tmux.conf	/^set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3$/;"	k
style bg	tmux.conf	/^set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1$/;"	k
style bg	tmux.conf	/^set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1$/;"	k
